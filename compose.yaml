services:
  spring-backend:
    build:
      context: .
      dockerfile: './dockerfiles/backend/Dockerfile'
    depends_on:
      - postgres
      - rabbitmq
    environment:
      - 'POSTGRES_USER=${POSTGRES_USER}'
      - 'POSTGRES_PASSWORD=${POSTGRES_PASSWORD}'
      - 'POSTGRES_DB=${POSTGRES_DB}'

      - 'RABBIT_USER=${RABBIT_USER}'
      - 'RABBIT_PASSWORD=${RABBIT_PASSWORD}'

      - 'ALLOWED_ORIGINS=${ALLOWED_ORIGINS}'
    profiles:
      - prod
      - nginx-free

  nginx:
    image: 'rapidfort/nginx-official:1.25.5-alpine3.19-perl'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl/:/etc/nginx/ssl/
      - /home/deploy/app/:/home/deploy/app:ro
    environment:
      - 'DOMAIN_NAME=${DOMAIN_NAME}'
    ports:
      - '443:443'
    depends_on:
      - spring-backend
    profiles:
      - prod

  rabbitmq:
    image: 'rabbitmq:4.1.0-alpine'

    environment:
      - 'RABBITMQ_DEFAULT_USER=${RABBIT_USER}'
      - 'RABBITMQ_DEFAULT_PASS=${RABBIT_PASSWORD}'

    profiles:
      - prod
      - nginx-free

  rabbitmq-dev:
    image: 'rabbitmq:4.1.0-management-alpine'
    ports:
      - '5672:5672'
      - '15672:15672'
    profiles:
      - dev
      - test

  postgres:
    image: 'rapidfort/postgresql-official:17.4-alpine3.20'
    environment:
      - 'POSTGRES_DB=${POSTGRES_DB}'
      - 'POSTGRES_PASSWORD=${POSTGRES_PASSWORD}'
      - 'POSTGRES_USER=${POSTGRES_USER}'
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    ### For security reasons, you should not expose the database to the outside world
    ### ports:
    ###   - '5432:5432'
    ### Uncomment the above lines to expose the database to the outside world (NOT RECOMMENDED)
    profiles:
      - prod
      - nginx-free

  postgres-dev:
    image: postgres:15
    environment:
      - POSTGRES_DB=dayguard
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=secret
    ports:
      - '5432:5432'
    labels:
      org.springframework.boot.service-connection: postgres
      org.springframework.boot.readiness-check.tcp.disable: false
    profiles:
      - dev

  redis:
    image: bitnami/redis:8.0.2
    environment:
      - 'REDIS_PASSWORD=${REDIS_PASSWORD}'
    profiles:
      - prod

  redis-dev:
    image: bitnami/redis:8.0.2
    environment:
      - 'REDIS_PASSWORD=secret'
    ports:
      - '6379:6379'
    profiles:
      - dev
      - test