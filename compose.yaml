services:
  spring-backend:
    build:
      context: ../../..
      dockerfile: '../../../dockerfiles/backend/Dockerfile'
    depends_on:
      - postgres
    profiles:
      - prod

  nginx:
    image: 'rapidfort/nginx-official:1.25.5-alpine3.19-perl'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl/:/etc/nginx/ssl/
    ports:
      - '443:443'
    depends_on:
      - spring-backend
    profiles:
      - prod

  rabbitmq:
    image: 'rabbitmq:4.1.0-alpine'
    profiles:
      - prod

  rabbitmq-dev:
    image: 'rabbitmq:4.1.0-management-alpine'
    ports:
      - '5672:5672'
      - '15672:15672'
    profiles:
      - dev

  postgres:
    image: 'rapidfort/postgresql-official:17.4-alpine3.20'
    environment:
      - 'POSTGRES_DB=dayguard'
      - 'POSTGRES_PASSWORD=secret'
      - 'POSTGRES_USER=myuser'
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    ### For security reasons, we should not expose the database to the outside world
    ### ports:
    ###   - '5432:5432'
    ### Uncomment the above lines to expose the database to the outside world (NOT RECOMMENDED)
    profiles:
      - prod

  postgres-dev:
    image: postgres:15
    environment:
      - POSTGRES_DB=dayguard
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=secret
    volumes:
      - ./pgdata-dev:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    labels:
      org.springframework.boot.service-connection: postgres
      org.springframework.boot.readiness-check.tcp.disable: false
    profiles:
      - dev
